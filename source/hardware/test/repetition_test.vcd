$date
	Thu Dec 12 16:14:35 2019
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module repetition_test $end
$var wire 1 ! ready $end
$var wire 16 " rep_rate [15:0] $end
$var reg 1 # clear $end
$var reg 1 $ clk $end
$var reg 16 % field [15:0] $end
$var reg 16 & nreps [15:0] $end
$var reg 1 ' reset_n $end
$var reg 1 ( valid $end
$var integer 32 ) dump [31:0] $end
$var integer 32 * endticks [31:0] $end
$var integer 32 + f [31:0] $end
$var integer 32 , line [31:0] $end
$var integer 32 - rc [31:0] $end
$scope module rep0 $end
$var wire 1 # clear $end
$var wire 1 . count_incr $end
$var wire 16 / field [15:0] $end
$var wire 16 0 rep_rate [15:0] $end
$var wire 1 ' reset_n $end
$var wire 1 $ sys_clk $end
$var wire 1 ( valid $end
$var wire 1 1 threshold_reached $end
$var wire 3 2 mem_in [2:0] $end
$var reg 1 3 bypass $end
$var reg 3 4 clear_d [2:0] $end
$var reg 16 5 count [15:0] $end
$var reg 3 6 mask [2:0] $end
$var reg 3 7 mem_out [2:0] $end
$var reg 1 8 out_valid $end
$var reg 16 9 raddr [15:0] $end
$var reg 1 : raddr_valid $end
$var reg 3 ; rep_incr [2:0] $end
$var reg 3 < threshold [2:0] $end
$var reg 16 = waddr [15:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx =
bx <
bx ;
x:
bx 9
x8
bx 7
bx 6
bx 5
bx 4
x3
bx 2
x1
bx 0
bx /
x.
b1 -
bx ,
b10000000000000000000000000000011 +
b0 *
b1 )
0(
0'
b10 &
bx %
0$
0#
bx "
0!
$end
#5
b1 2
01
0.
b0 4
03
b1 <
b1 ;
b1 6
b0 7
08
0:
b0 "
b0 0
b0 5
b0 =
b0 9
1$
#10
0$
#15
1$
#20
0$
#25
1$
1!
1'
#30
1#
b1 %
b1 /
1(
b11111111111111111111111111111111 ,
0$
#35
1:
b1 9
b1 4
1$
#40
0#
b0 %
b0 /
b0 ,
0$
#45
x.
b0x0 2
x1
18
bx 7
b1 =
b0 9
b10 <
b10 ;
b10 6
b10 4
1$
#50
b1 %
b1 /
b1 ,
0$
#55
bx "
bx 0
bx 5
b0 =
b1 9
b100 4
1$
#60
b0 %
b0 /
b0 ,
0$
#65
b0x0 7
b1 =
b0 9
b0 4
1$
#70
b1 *
0(
0$
#75
b0 =
0:
1$
#80
b10 *
0$
#85
0.
08
1$
#90
b11 *
0$
#95
1$
#100
b100 *
0$
